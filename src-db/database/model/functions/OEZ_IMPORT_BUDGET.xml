<?xml version="1.0"?>
  <database name="FUNCTION OEZ_IMPORT_BUDGET">
    <function name="OEZ_IMPORT_BUDGET" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:= 1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32);

  v_UUIDBudget VARCHAR(32);
  v_UUIDBudgetLine VARCHAR(32);
  v_c_year_id VARCHAR(32);
  v_budgetname VARCHAR(32);
  v_c_year_name VARCHAR(32);
  v_lastrowdate date:=NULL;
  v_RecGenerated NUMBER:=0;
  v_RecTotal NUMBER:=0;
  v_RecFailed NUMBER:=0;
  v_numRec NUMBER:= 0;
  v_DocNoInvoice VARCHAR(60);
  v_samebudget_id VARCHAR(32);
  v_strError VARCHAR(2000):='';
  --Imp GL Journal Parameter
  v_tmpAD_OrgDoc_ID VARCHAR(32);
  v_DocNoGLJournalBatch VARCHAR(60);
  v_DocNoGLJournal VARCHAR(60);
  v_UUIDBatch VARCHAR(32);
  v_UUIDHeadGLJ VARCHAR(32);
  v_UUIDLineGLJ VARCHAR(32);
  v_DocTypeID VARCHAR(32);
  v_PeriodID VARCHAR(32);
  iGLLine INT;
  v_debitAMT NUMBER;
  v_creditAMT NUMBER;
  v_GLLinesAcct VARCHAR(32);   
  v_CurrAsset_ID VARCHAR(32);   
  v_CurrBase_ID VARCHAR(32);
  v_convRate NUMBER;
  v_MultiplyRate NUMBER:= 0;
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_Budgetline RECORD;
  BEGIN    
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY    
    -- Get PARAMETERS
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, i.AD_Client_ID, i.AD_Org_ID, p.ParameterName,
        p.P_String, p.P_Number, p.P_Date, p.P_Date_To
      FROM AD_PINSTANCE i
      LEFT JOIN AD_PINSTANCE_PARA p ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:= Cur_Parameter.Record_ID; --save the asset primary key
      v_User_ID:= Cur_Parameter.AD_User_ID;
      IF (Cur_Parameter.ParameterName = 'ad_org_id') THEN
        v_tmpAD_OrgDoc_ID:= Cur_Parameter.P_String;
      END IF;
      /*
      IF (Cur_Parameter.ParameterName = 'c_project_id') THEN
        v_Project_ID:= Cur_Parameter.P_String;
      END IF;
      */
    END LOOP; -- Get Parameter   
       
    DBMS_OUTPUT.PUT_LINE( 'Record_ID = ' || v_Record_ID);

    --Upating Import budget
    FOR Cur_Budgetline IN
      (
        SELECT seqno,i_budgetline_id, ad_client_id, ad_org_id, 
		(SELECT c_currency_id FROM c_currency WHERE iso_code=i_budgetline.Currencyident LIMIT 1) AS c_currency_id,
		Periodident,Elementvalueident,Acctschemaident,Currencyident,
		(SELECT m_product_id FROM m_product WHERE Value=i_budgetline.Productident LIMIT 1) AS m_product_id,
		Productident,
		(SELECT m_product_category_id FROM m_product_category WHERE Value=i_budgetline.prodcategoryident LIMIT 1) AS m_product_category_id,
		Partnerident,Bpgroupident,Orgtrxident,Activityident,Campaignident,Projectident,Salesregionident,Description
        FROM i_budgetline
        WHERE ad_client_id=(SELECT ad_client_id FROM i_budgetline WHERE i_budgetline_id=v_Record_ID)
          AND i_isimported='N'
        ORDER BY seqno ASC
      )
    LOOP
      --Update fix record each row
      UPDATE i_budgetline SET
        ad_org_id=v_tmpAD_OrgDoc_ID,
        C_AcctSchema_ID=(SELECT C_AcctSchema_ID FROM C_AcctSchema WHERE upper(name)=upper(Cur_Budgetline.Acctschemaident)),
        
		C_Period_ID=(SELECT C_Period_ID FROM C_Period WHERE Cur_Budgetline.Periodident::date>=StartDate
          AND Cur_Budgetline.Periodident::date<=EndDate AND AD_Client_ID=Cur_Budgetline.ad_client_id LIMIT 1), 
		c_elementvalue_id = (select c_elementvalue_id from c_elementvalue where upper(value)=upper(Cur_Budgetline.Elementvalueident) limit 1),
        C_Currency_ID=(SELECT C_Currency_ID FROM C_Currency WHERE upper(ISO_CODE)=upper(Cur_Budgetline.Currencyident)),
        C_UOM_ID=(SELECT C_UOM_ID FROM M_Product WHERE upper(value)=upper(Cur_Budgetline.Productident)),
        C_BPartner_ID=(SELECT C_BPartner_ID FROM C_BPartner WHERE upper(value)=upper(Cur_Budgetline.Partnerident)),
		c_bp_group_id=(select c_bp_group_id from c_bp_group where upper(value)=upper(Cur_Budgetline.Bpgroupident) limit 1),
        M_Product_ID=(SELECT M_Product_ID FROM M_Product WHERE upper(value)=upper(Cur_Budgetline.Productident)),
		M_product_category_id=Cur_Budgetline.m_product_category_id,
        C_Project_ID=(SELECT C_Project_ID FROM C_Project
        WHERE upper(trim(value))=upper(trim(Cur_Budgetline.Projectident)) LIMIT 1),
        C_Campaign_ID=(SELECT C_Campaign_ID FROM C_Campaign WHERE upper(trim(value))=upper(trim(Cur_Budgetline.Campaignident)) LIMIT 1),
        AD_OrgTrx_ID=(select ad_org_id from ad_org where upper(trim(value))=upper(trim(Cur_Budgetline.Orgtrxident)) LIMIT 1),
		c_activity_id=(select c_activity_id from c_activity WHERE upper(value)=upper(Cur_Budgetline.Activityident)),
		c_salesregion_id = (select c_salesregion_id from c_salesregion WHERE upper(value)=upper(Cur_Budgetline.Salesregionident) )
      WHERE i_budgetline_id=Cur_Budgetline.i_budgetline_id;
    END LOOP;
  
    --Generated budgetline

    FOR Cur_Budgetline IN
      (
        SELECT *
        FROM i_budgetline
        WHERE ad_client_id=(SELECT ad_client_id FROM i_budgetline WHERE i_budgetline_id=v_Record_ID)
          AND i_isimported='N'
        ORDER BY seqno ASC
      )
    LOOP       
	  --Get and Upating Error when Import budget (Null Value)
      IF (Cur_Budgetline.seqno is NULL) THEN
        SELECT v_strError || 'Sequence Number, ' INTO v_strError;
      END IF;
      IF (Cur_Budgetline.amount is NULL) THEN
        SELECT v_strError || 'Amount, ' INTO v_strError;
      END IF;
      IF (SELECT COALESCE(Cur_Budgetline.c_currency_id, 'NULL')='NULL') THEN
        SELECT v_strError || 'Currency Identification, ' INTO v_strError;
      END IF;
      IF (SELECT COALESCE(Cur_Budgetline.c_period_id, 'NULL')='NULL') THEN
        SELECT v_strError || 'Period Identification, ' INTO v_strError;
      END IF;
      IF (SELECT COALESCE(Cur_Budgetline.c_elementvalue_id, 'NULL')='NULL') THEN
        SELECT v_strError || 'Elementvalueident, ' INTO v_strError;
      END IF;
      IF (SELECT COALESCE(Cur_Budgetline.c_acctschema_id, 'NULL')='NULL') THEN
        SELECT v_strError || 'Acctschemaident, ' INTO v_strError;
      END IF;
      

  --Update message error to i_budgetline each row
  IF (v_strError<>'') THEN
    UPDATE i_budgetline SET
      i_errormsg=(SELECT SUBSTRING(v_strError, 1, length(v_strError)-2) || ' has no value.')
    WHERE i_budgetline_id=Cur_Budgetline.i_budgetline_id;
  END IF;
	
  IF (v_strError is not NULL || v_strError <> '') THEN
        
      -----------------------------------------------------------------------
      --Get currency on header (Imp budget) and base currency on client--
      ---------------------------------------------------------------------- 
	
      v_numRec:= v_numRec+1;
      select (select c_year_id from c_period where c_period_id=Cur_Budgetline.c_period_id ) into v_c_year_id;
		select (select year from c_year where c_year_id=v_c_year_id) into v_c_year_name;
		v_budgetname:= (select 'Budget tahun ' || v_c_year_name);
      select (select distinct c_budget_id from c_budgetline where c_period_id=Cur_Budgetline.c_period_id limit 1) INTO v_samebudget_id;
	If(v_lastrowdate is not NULL AND v_lastrowdate=Cur_Budgetline.periodident::date OR v_samebudget_id is not NULL) THEN
		if( v_samebudget_id is not NULL) then
		v_UUIDBudget:=v_samebudget_id;
		end if;
	ELSE	
		SELECT get_uuid() INTO v_UUIDBudget;

        --Create Header for budget
        INSERT INTO c_budget
          (	
            c_budget_id, ad_client_id, ad_org_id, isactive, created, createdby,
            updated, updatedby, name,description,  c_year_id, copybudget, budget_type, exportexcel, exportactual, process
          )
        VALUES
          (
            v_UUIDBudget, Cur_Budgetline.ad_client_id, Cur_Budgetline.ad_org_id, 'Y', now(), v_User_ID,
            now(), v_User_ID, v_budgetname, Cur_Budgetline.description, v_c_year_id, 'N','F','N','Y','N'
           
          );
	END IF;

      --Create budget Line

        SELECT get_uuid() INTO v_UUIDBudgetLine;

        INSERT INTO c_budgetline
          (
            c_budgetline_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, 
			c_elementvalue_id, c_period_id, c_currency_id, c_uom_id, qty, m_product_id, c_bpartner_id, 
			ad_orgtrx_id, c_salesregion_id, c_project_id, c_campaign_id, c_activity_id, user1_id, user2_id,
			description, seqno, c_bp_group_id, m_product_category_id, c_budget_id, amount, price, 
			c_acctschema_id, a_asset_id, c_costcenter_id, actualamt
          )
        VALUES
          (
			v_UUIDBudgetLine, Cur_Budgetline.ad_client_id, Cur_Budgetline.ad_org_id, 'Y', now(), v_User_ID, now(), v_User_ID, 
			Cur_Budgetline.c_elementvalue_id, Cur_Budgetline.c_period_id, Cur_Budgetline.c_currency_id, Cur_Budgetline.c_uom_id, Cur_Budgetline.qty, Cur_Budgetline.m_product_id, Cur_Budgetline.c_bpartner_id, 
			Cur_Budgetline.ad_orgtrx_id, Cur_Budgetline.c_salesregion_id, Cur_Budgetline.c_project_id, Cur_Budgetline.c_campaign_id, Cur_Budgetline.c_activity_id, NULL, NULL,
			Cur_Budgetline.description, Cur_Budgetline.seqno, Cur_Budgetline.c_bp_group_id, Cur_Budgetline.m_product_category_id, v_UUIDBudget, Cur_Budgetline.amount, Cur_Budgetline.price, 
			Cur_Budgetline.c_acctschema_id, NULL, NULL, Cur_Budgetline.amount
		  
           
          );
          
		  v_lastrowdate:=Cur_Budgetline.periodident::date;
   

      --Update link to c_budget for each row
      UPDATE i_budgetline SET
         c_budget_id=v_UUIDBudget, c_budgetline_id=v_UUIDBudgetLine,
        I_IsImported='Y',i_errormsg=''
      WHERE i_budgetline_id=Cur_Budgetline.i_budgetline_id;
	END IF;
    END LOOP;

       --Get Generated Record
    SELECT COUNT(ArrayBatch.i_budgetline_id) INTO v_RecGenerated
    FROM (SELECT DISTINCT i_budgetline_id FROM i_budgetline
    WHERE ad_client_id=(SELECT ad_client_id FROM i_budgetline WHERE i_budgetline_id=v_Record_ID)
      AND i_isimported='Y'
    ORDER BY i_budgetline_id ASC) AS ArrayBatch;
    
    --Get Total Record
    SELECT COUNT(ArrayBatch.i_budgetline_id) INTO v_RecTotal
    FROM (SELECT DISTINCT i_budgetline_id FROM i_budgetline
    WHERE ad_client_id=(SELECT ad_client_id FROM i_budgetline WHERE i_budgetline_id=v_Record_ID)
    ORDER BY i_budgetline_id ASC) AS ArrayBatch;
           
    --Get Fail Record
    SELECT COUNT(ArrayBatch.i_budgetline_id) INTO v_RecFailed
    FROM (SELECT DISTINCT i_budgetline_id FROM i_budgetline
    WHERE ad_client_id=(SELECT ad_client_id FROM i_budgetline WHERE i_budgetline_id=v_Record_ID)
      AND i_isimported='N'
    ORDER BY i_budgetline_id ASC) AS ArrayBatch;

      
	SELECT REGEXP_REPLACE(SUBSTRING(array_agg(ArrayBatch.name)::varchar, 2, (SELECT length(array_agg(ArrayBatch.name)::varchar)-2))
      , ',', ', ', 'g') INTO v_DocNoInvoice
    FROM (SELECT DISTINCT b.name FROM c_budget b, i_budgetline bl
    WHERE b.ad_client_id=(SELECT ad_client_id FROM i_budgetline WHERE i_budgetline_id=v_Record_ID)
      AND i_isimported='Y' AND b.c_budget_id=bl.c_budget_id 
    ) AS ArrayBatch;	  
    v_Result:= 1;
    IF (v_numRec=0) THEN
      v_Message:= 'There is no budget to be generated. Generated: (' || v_RecGenerated || '/'|| v_RecTotal || '), Failed: ' || v_RecFailed;
    ELSE
      v_Message:= 'Budget No. ' || v_DocNoInvoice || ' has been generated. Generated: (' || v_RecGenerated || '/'|| v_RecTotal || '), Failed: ' || v_RecFailed;
    END IF;
    
    --<<FINISH_PROCESS>>
    --Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    RETURN;
  END; --BODY
  
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END OEZ_IMPORT_BUDGET
]]></body>
    </function>
  </database>
